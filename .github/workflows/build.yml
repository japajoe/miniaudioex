name: Build for MacOS, Linux, and Windows

on: [push, pull_request]

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64, x86_64]  # Mac architectures: ARM and Intel

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up dependencies on MacOS
      run: |
        echo "Setting up dependencies on MacOS ${{ matrix.arch }}"
        brew install cmake

    - name: Build the project on MacOS
      run: |
        echo "Building project on MacOS ${{ matrix.arch }}"
        mkdir build
        cd build
        cmake -DBUILD_PLATFORM=mac -DCMAKE_BUILD_TYPE=Release ..
        cmake --build .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-macos-${{ matrix.arch }}
        path: build/

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86, x86_64]  # Linux architectures: x86 (32-bit) and x64 (64-bit)

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up dependencies on Linux
      run: |
        echo "Setting up dependencies on Linux ${{ matrix.arch }}"
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y cmake gcc-multilib g++-multilib

    - name: Build the project on Linux
      run: |
        echo "Building project on Linux ${{ matrix.arch }}"
        mkdir build
        cd build
        if [ "${{ matrix.arch }}" == "x86" ]; then
          cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_FLAGS="-m32" -DCMAKE_CXX_FLAGS="-m32" -DBUILD_PLATFORM=linux -DCMAKE_BUILD_TYPE=Release ..
        else
          cmake -DBUILD_PLATFORM=linux -DCMAKE_BUILD_TYPE=Release ..
        fi
        cmake --build .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-linux-${{ matrix.arch }}
        path: build/

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86, x86_64]  # Windows architectures: x86 (32-bit) and x64 (64-bit)

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up dependencies on Windows
      run: |
        echo "Setting up dependencies on Windows ${{ matrix.arch }}"
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Build the project on Windows
      run: |
        echo "Building project on Windows ${{ matrix.arch }}"
        mkdir build
        cd build
        if (${{ matrix.arch }} -eq 'x86') {
          cmake -A Win32 -DBUILD_PLATFORM=windows -DCMAKE_BUILD_TYPE=Release ..
        } else {
          cmake -DBUILD_PLATFORM=windows -DCMAKE_BUILD_TYPE=Release ..
        }
        cmake --build . --config Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-windows-${{ matrix.arch }}
        path: build/