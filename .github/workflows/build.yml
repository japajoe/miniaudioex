name: Build miniaudioex

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64]
        include:
          - os: macos-latest
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up dependencies on Ubuntu and macOS (Intel)
      if: matrix.os == 'ubuntu-latest' || (matrix.os == 'macos-latest' && matrix.arch == 'x64')
      run: |
        # Install dependencies (example for CMake)
        sudo apt-get update
        sudo apt-get install -y cmake

    - name: Set up dependencies on macOS (ARM)
      if: matrix.os == 'macos-latest' && matrix.arch == 'arm64'
      run: |
        # Install dependencies (example for CMake)
        brew install cmake

    - name: Set up dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        # Install dependencies (example for CMake)
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Build the project on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir build
        cd build
        cmake -DBUILD_PLATFORM=linux -DCMAKE_BUILD_TYPE=Release ..
        cmake --build .

    - name: Build the project on macOS (Intel)
      if: matrix.os == 'macos-latest' && matrix.arch == 'x64'
      run: |
        mkdir build
        cd build
        cmake -DBUILD_PLATFORM=mac -DCMAKE_BUILD_TYPE=Release ..
        cmake --build .

    - name: Build the project on macOS (ARM)
      if: matrix.os == 'macos-latest' && matrix.arch == 'arm64'
      run: |
        mkdir build
        cd build
        cmake -DBUILD_PLATFORM=mac -DCMAKE_BUILD_TYPE=Release ..
        cmake --build .

    - name: Build the project on Windows
      if: matrix.os == 'windows-latest'
      run: |
        mkdir build
        cd build
        cmake -DBUILD_PLATFORM=windows -DCMAKE_BUILD_TYPE=Release ..
        cmake --build .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.os }}-${{ matrix.arch }}
        path: build/